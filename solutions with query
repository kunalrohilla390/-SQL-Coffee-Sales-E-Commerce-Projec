--  Coffee -- Data Analysis 

SELECT * FROM city;
SELECT * FROM products;
SELECT * FROM customers;
SELECT * FROM sales;

-- Reports & Data Analysis


-- Q.1 Coffee Consumers Count
-- How many people in each city are estimated to consume coffee, given that 25% of the population does?

SELECT 
    city_name, ROUND(population * 0.25 / 1000000, 2), city_rank
FROM
    city
ORDER BY ROUND(population * 0.25 / 1000000, 2) DESC

-- -- Q.2
-- Total Revenue from Coffee Sales
-- What is the total revenue generated from coffee sales across all cities in the last quarter of 2023?


SELECT 
    ci.city_name,
    SUM(s.total) AS total_revenue
FROM 
    sales AS s
JOIN 
    customers AS c ON s.customer_id = c.customer_id
JOIN 
    city AS ci ON ci.city_id = c.city_id
WHERE 
    YEAR(s.sale_date) = 2023
    AND QUARTER(s.sale_date) = 4
GROUP BY 
    ci.city_name
ORDER BY 
    total_revenue DESC;


-- Q.3
-- Sales Count for Each Product
-- How many units of each coffee product have been sold?

SELECT 
	p.product_name,
	COUNT(s.sale_id) as total_orders
FROM products as p
LEFT JOIN
sales as s
ON s.product_id = p.product_id
GROUP BY 1
ORDER BY 2 DESC

-- Q.4
-- Average Sales Amount per City
-- What is the average sales amount per customer in each city?

SELECT 
    ci.city_name, 
    SUM(s.total) AS total_revenue,
    COUNT(DISTINCT s.customer_id) AS total_cust,
    ROUND(SUM(s.total) / COUNT(DISTINCT s.customer_id), 2) AS avg_sales_per_cx
FROM 
    city AS ci
JOIN 
    customers AS c ON c.city_id = ci.city_id
JOIN 
    sales AS s ON s.customer_id = c.customer_id
GROUP BY 
    ci.city_name
ORDER BY 
    avg_sales_per_cx DESC;


-- -- Q.5
-- Top Selling Products by City
-- What are the top 3 selling products in each city based on sales volume?
SELECT city_name, product_name, total_orders
FROM (
    SELECT 
        ci.city_name,
        p.product_name,
        COUNT(s.sale_id) AS total_orders,
        DENSE_RANK() OVER (
            PARTITION BY ci.city_name 
            ORDER BY COUNT(s.sale_id) DESC
        ) AS rank
    FROM sales AS s
    JOIN products AS p ON s.product_id = p.product_id
    JOIN customers AS c ON c.customer_id = s.customer_id
    JOIN city AS ci ON ci.city_id = c.city_id
    GROUP BY ci.city_name, p.product_name
) AS ranked
WHERE rank <= 3;


-- -- Q.6
-- Average Sale vs Rent
-- Find each city and their average sale per customer and avg rent per customer
SELECT 
    ci.city_name,
    c.customer_name,
    ROUND(AVG(s.total), 2) AS avg_sales,
    AVG(ci.estimated_rent) AS avg_rent
FROM 
    city AS ci
JOIN 
    customers AS c ON c.city_id = ci.city_id
JOIN 
    sales AS s ON s.customer_id = c.customer_id
GROUP BY 
    ci.city_name, c.customer_name
ORDER BY 
    avg_rent;



-- Q.7
-- Monthly Sales Growth
-- Sales growth rate: Calculate the percentage growth (or decline) in sales over different time periods (monthly)
-- by each city

SELECT 
    city_name,
    sale_month,
    total_sales,
    prev_month_sales,
    ROUND(
        (total_sales - prev_month_sales) / prev_month_sales * 100,
        2
    ) AS growth_percent
FROM (
    SELECT 
        ci.city_name,
        DATE_FORMAT(s.sale_date, '%Y-%m') AS sale_month,
        SUM(s.total) AS total_sales,
        LAG(SUM(s.total)) OVER (
            PARTITION BY ci.city_name 
            ORDER BY DATE_FORMAT(s.sale_date, '%Y-%m')
        ) AS prev_month_sales
    FROM sales s
    JOIN customers c ON s.customer_id = c.customer_id
    JOIN city ci ON c.city_id = ci.city_id
    GROUP BY ci.city_name, DATE_FORMAT(s.sale_date, '%Y-%m')
) AS monthly_data
WHERE prev_month_sales IS NOT NULL
ORDER BY city_name, sale_month;


--  Q.8 Market Potential Analysis
-- Identify top 3 city based on highest sales, return city name, total sale, total rent, total customers, estimated coffee consumer
SELECT 
    ci.city_name,
    SUM(s.total) AS total_sale,
    ci.estimated_rent AS total_rent,
    COUNT(DISTINCT c.customer_id) AS total_customers,
    COUNT(DISTINCT CASE 
        WHEN p.product_name LIKE '%coffee%' THEN c.customer_id 
    END) AS estimated_coffee_consumer
FROM city ci
JOIN customers c ON ci.city_id = c.city_id
JOIN sales s ON s.customer_id = c.customer_id
JOIN products p ON p.product_id = s.product_id
GROUP BY ci.city_name, ci.estimated_rent
ORDER BY total_sale DESC
LIMIT 3;


-- Q.9Customer Segmentation by City
-- How many unique customers are there in each city who have purchased coffee products?
SELECT 
    ci.city_name,product_name ,
    COUNT(DISTINCT s.customer_id) AS unique_customers
FROM 
    sales AS s
JOIN 
    products AS p ON s.product_id = p.product_id
JOIN 
    customers AS c ON s.customer_id = c.customer_id
JOIN 
    city AS ci ON c.city_id = ci.city_id
WHERE 
    p.product_name LIKE '%coffee%'
GROUP BY 
    ci.city_name ,product_name
ORDER BY 
    unique_customers DESC;
    
